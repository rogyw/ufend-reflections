When would you want to use a remote repository rather than keeping all your work
local?

 - if project has multiple contributors if project is to be shared if part of
 - established process for individual or company (Management) as a backup to
 - encourage others to contribute or provide feedback if your local environment
 - isn't suitable for retaining content. e.g. travel if security is required if
 - additional resources/capacity/functionality is required


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

 - remote may be under control of a different entity (Company/Individual/Group)
 - any changes made by other contributiors do not interfere with your branch
 - something may go wrong or unexpected results may occur to use remote as a
 - backup to keep remote clean and allow you to experiement more locally and
 - discard may not have access to network/remote temporarily


Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Branches are splits inside the repository allowing for parralel or
compartmentalised devlopment on ideas within a single repository.

Clones are duplicates of repositories. It is a copy of the reposotory including
all past history. This allows local/remote and other duplication.

Fork is available on Github. A fork is a type of clone function provided on
Github that links the original owners source repository to the new owners
duplicate of repository. This allows users to work on the duplicate repositories
without need for permission to edit the orinial repository. The link between the
two repository allows GitHub to manage and support sharing updates between
users.


What is the benefit of having a copy of the last known state of the remote
stored locally?

Git is able to detect changes in state on the repository in remote.  User can be
disconnected from remote and reconnect later to get updates and sync. Other
things can ocur on remote repository that dont conflict with local until ready
to merge.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
